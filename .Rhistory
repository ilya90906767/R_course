abs_vec <- c()
for (i in seq_along(rand_vec)) {
if (rand_vec[i] < 0) {
abs_vec[i] <- abs(rand_vec[i])
} else {
abs_vec[i] <- rand_vec[i]
}
}
new_abs <- abs(rand_vec)
log_vec<-log(abs_vec)
alphabet <- c()
for (i in seq_along(log_vec)){
alphabet[i] <- letters[log_vec[i]]
}
data <- read.delim('Response2Drug.txt')
data$Age <- ifelse(data$Age < 30, "молодой", ifelse(data$Age > 60, "среднячок", "старый"))
data <- data[!is.na(data$Age) ,]
fact<- function(value){
if (value > 0 & value%%1==0){
if (value%%2 == 0){
result <- 1
for (i in 2:value){
result <- result*i
}
return(result)
} else {
result <- 1
for (i in 1:value){
result <- result*i
}
return(result)
}
} else{return(NA)}
}
fact(-2)
# set.seed(1)
#
# random_vec <- runif(n=25, min=1, max=20)
matri<-runif(25,-10,50)
result<-matrix(matri,size,size)
xxx <- apply(result, 1, sum)
yyy <- apply(result, 2, sum)
zzz <- apply(result, 2, mean)
vvv <- apply(result, 1, mean)
# Первый зан
# num1 <- as.numeric(readline(prompt="чисто1 "))
#
# num2 <- as.numeric(readline(prompt="число2"))
#
# sum <- num1 + num2
# print(paste("суммы", sum))
transition<-function(x){
x<-x*1000
x<-x/3600
return(x)
}
example<-transition(5)
#Второе занятие
first <- -4:5
second <- c("S","V","123","NaN",1)
third <- rep(101, 12)
third1 <- as.numeric(third)
third2 <- as.character(third)
rand_vec <- runif(50, -20, 100)
ind <- which(rand_vec > 70)
good_inf <- which(rand_vec < 70 & rand_vec > 30)
abs_vec <- c()
for (i in seq_along(rand_vec)) {
if (rand_vec[i] < 0) {
abs_vec[i] <- abs(rand_vec[i])
} else {
abs_vec[i] <- rand_vec[i]
}
}
new_abs <- abs(rand_vec)
log_vec<-log(abs_vec)
alphabet2 <- which(letters[alphabet])
?write.table
data <- read.delim('Response2Drug.txt')
data <- data[!is.na(data$Age) ,]
data$Age <- ifelse(data$Age < 30, "молодой", ifelse(data$Age > 60, "среднячок", "старый"))
write.table(data)
fact<- function(value){
if (value > 0 & value%%1==0){
if (value%%2 == 0){
result <- 1
for (i in 2:value){
result <- result*i
}
return(result)
} else {
result <- 1
for (i in 1:value){
result <- result*i
}
return(result)
}
} else{return(NA)}
}
fact(-2)
# set.seed(1)
#
# random_vec <- runif(n=25, min=1, max=20)
matri<-runif(25,-10,50)
result<-matrix(matri,size,size)
xxx <- apply(result, 1, sum)
yyy <- apply(result, 2, sum)
zzz <- apply(result, 2, mean)
vvv <- apply(result, 1, mean)
# Первый зан
# num1 <- as.numeric(readline(prompt="чисто1 "))
#
# num2 <- as.numeric(readline(prompt="число2"))
#
# sum <- num1 + num2
# print(paste("суммы", sum))
transition<-function(x){
x<-x*1000
x<-x/3600
return(x)
}
example<-transition(5)
#Второе занятие
first <- -4:5
second <- c("S","V","123","NaN",1)
third <- rep(101, 12)
third1 <- as.numeric(third)
third2 <- as.character(third)
rand_vec <- runif(50, -20, 100)
ind <- which(rand_vec > 70)
good_inf <- which(rand_vec < 70 & rand_vec > 30)
abs_vec <- c()
for (i in seq_along(rand_vec)) {
if (rand_vec[i] < 0) {
abs_vec[i] <- abs(rand_vec[i])
} else {
abs_vec[i] <- rand_vec[i]
}
}
new_abs <- abs(rand_vec)
log_vec<-log(abs_vec)
alphabet2 <- letters[alphabet]
# alphabet <- c()
# for (i in seq_along(log_vec)){
#   alphabet[i] <- letters[log_vec[i]]
# }
print(alphabet)
which(alphabet=="e" & alphabet=="f")
data <- read.delim('Response2Drug.txt')
data <- data[!is.na(data$Age) ,]
data$Age <- ifelse(data$Age < 30, "молодой", ifelse(data$Age > 60, "среднячок", "старый"))
write.table(data)
fact<- function(value){
if (value > 0 & value%%1==0){
if (value%%2 == 0){
result <- 1
for (i in 2:value){
result <- result*i
}
return(result)
} else {
result <- 1
for (i in 1:value){
result <- result*i
}
return(result)
}
} else{return(NA)}
}
fact(-2)
# set.seed(1)
#
# random_vec <- runif(n=25, min=1, max=20)
matri<-runif(25,-10,50)
result<-matrix(matri,size,size)
xxx <- apply(result, 1, sum)
yyy <- apply(result, 2, sum)
zzz <- apply(result, 2, mean)
vvv <- apply(result, 1, mean)
# Первый зан
# num1 <- as.numeric(readline(prompt="чисто1 "))
#
# num2 <- as.numeric(readline(prompt="число2"))
#
# sum <- num1 + num2
# print(paste("суммы", sum))
transition<-function(x){
x<-x*1000
x<-x/3600
return(x)
}
example<-transition(5)
#Второе занятие
first <- -4:5
second <- c("S","V","123","NaN",1)
third <- rep(101, 12)
third1 <- as.numeric(third)
third2 <- as.character(third)
rand_vec <- runif(50, -20, 100)
ind <- which(rand_vec > 70)
good_inf <- which(rand_vec < 70 & rand_vec > 30)
abs_vec <- c()
for (i in seq_along(rand_vec)) {
if (rand_vec[i] < 0) {
abs_vec[i] <- abs(rand_vec[i])
} else {
abs_vec[i] <- rand_vec[i]
}
}
new_abs <- abs(rand_vec)
log_vec<-log(abs_vec)
alphabet2 <- letters[alphabet]
# alphabet <- c()
# for (i in seq_along(log_vec)){
#   alphabet[i] <- letters[log_vec[i]]
# }
print(alphabet)
replaced_alphabed <- which(alphabet=="e" & alphabet=="f")
data <- read.delim('Response2Drug.txt')
data <- data[!is.na(data$Age) ,]
data$Age <- ifelse(data$Age < 30, "молодой", ifelse(data$Age > 60, "среднячок", "старый"))
write.table(data)
fact<- function(value){
if (value > 0 & value%%1==0){
if (value%%2 == 0){
result <- 1
for (i in 2:value){
result <- result*i
}
return(result)
} else {
result <- 1
for (i in 1:value){
result <- result*i
}
return(result)
}
} else{return(NA)}
}
fact(-2)
# set.seed(1)
#
# random_vec <- runif(n=25, min=1, max=20)
matri<-runif(25,-10,50)
result<-matrix(matri,size,size)
xxx <- apply(result, 1, sum)
yyy <- apply(result, 2, sum)
zzz <- apply(result, 2, mean)
vvv <- apply(result, 1, mean)
# Первый зан
# num1 <- as.numeric(readline(prompt="чисто1 "))
#
# num2 <- as.numeric(readline(prompt="число2"))
#
# sum <- num1 + num2
# print(paste("суммы", sum))
transition<-function(x){
x<-x*1000
x<-x/3600
return(x)
}
example<-transition(5)
#Второе занятие
first <- -4:5
second <- c("S","V","123","NaN",1)
third <- rep(101, 12)
third1 <- as.numeric(third)
third2 <- as.character(third)
rand_vec <- runif(50, -20, 100)
ind <- which(rand_vec > 70)
good_inf <- which(rand_vec < 70 & rand_vec > 30)
abs_vec <- c()
for (i in seq_along(rand_vec)) {
if (rand_vec[i] < 0) {
abs_vec[i] <- abs(rand_vec[i])
} else {
abs_vec[i] <- rand_vec[i]
}
}
new_abs <- abs(rand_vec)
log_vec<-log(abs_vec)
alphabet2 <- letters[alphabet]
# alphabet <- c()
# for (i in seq_along(log_vec)){
#   alphabet[i] <- letters[log_vec[i]]
# }
print(alphabet)
replaced_alphabed <- which(alphabet=="e" & alphabet=="f")
results_of_rand <- sum(rand_vec)
data <- read.delim('Response2Drug.txt')
data <- data[!is.na(data$Age) ,]
data$Age <- ifelse(data$Age < 30, "молодой", ifelse(data$Age > 60, "среднячок", "старый"))
write.table(data)
fact<- function(value){
if (value > 0 & value%%1==0){
if (value%%2 == 0){
result <- 1
for (i in 2:value){
result <- result*i
}
return(result)
} else {
result <- 1
for (i in 1:value){
result <- result*i
}
return(result)
}
} else{return(NA)}
}
fact(-2)
# set.seed(1)
#
# random_vec <- runif(n=25, min=1, max=20)
matri<-runif(25,-10,50)
result<-matrix(matri,size,size)
xxx <- apply(result, 1, sum)
yyy <- apply(result, 2, sum)
zzz <- apply(result, 2, mean)
vvv <- apply(result, 1, mean)
# Первый зан
# num1 <- as.numeric(readline(prompt="чисто1 "))
#
# num2 <- as.numeric(readline(prompt="число2"))
#
# sum <- num1 + num2
# print(paste("суммы", sum))
transition<-function(x){
x<-x*1000
x<-x/3600
return(x)
}
example<-transition(5)
#Второе занятие
first <- -4:5
second <- c("S","V","123","NaN",1)
third <- rep(101, 12)
third1 <- as.numeric(third)
third2 <- as.character(third)
rand_vec <- runif(50, -20, 100)
ind <- which(rand_vec > 70)
good_inf <- which(rand_vec < 70 & rand_vec > 30)
abs_vec <- c()
for (i in seq_along(rand_vec)) {
if (rand_vec[i] < 0) {
abs_vec[i] <- abs(rand_vec[i])
} else {
abs_vec[i] <- rand_vec[i]
}
}
new_abs <- abs(rand_vec)
log_vec<-log(abs_vec)
alphabet2 <- letters[alphabet]
# alphabet <- c()
# for (i in seq_along(log_vec)){
#   alphabet[i] <- letters[log_vec[i]]
# }
print(alphabet)
replaced_alphabed <- which(alphabet=="e" & alphabet=="f")
results_of_rand <- sum(rand_vec)
results_of_rand2 <- prod(rand_vec)
results_of_rand3 <- mean(rand_vec)
print(good_inf)
data <- read.delim('Response2Drug.txt')
data <- data[!is.na(data$Age) ,]
data$Age <- ifelse(data$Age < 30, "молодой", ifelse(data$Age > 60, "среднячок", "старый"))
write.table(data, "test.txt")
fact<- function(value){
if (value > 0 & value%%1==0){
if (value%%2 == 0){
result <- 1
for (i in 2:value){
result <- result*i
}
return(result)
} else {
result <- 1
for (i in 1:value){
result <- result*i
}
return(result)
}
} else{return(NA)}
}
fact(-2)
# set.seed(1)
#
# random_vec <- runif(n=25, min=1, max=20)
matri<-runif(25,-10,50)
result<-matrix(matri,size,size)
xxx <- apply(result, 1, sum)
yyy <- apply(result, 2, sum)
zzz <- apply(result, 2, mean)
vvv <- apply(result, 1, mean)
Первый зан
data(ToothGrowth)
boxplot(ToothGrowth$len, main="Распределение длины зубов у морских свинок")
boxplot(len~supp, data=ToothGrowth, varwidth=TRUE, notch=TRUE, col=c("green","red"), main="Распределение длины зубов у морских свинок")
View(ToothGrowth)
hist(ToothGrowth$len,col="lightblue", freq=FALSE, ylim=c(0,0.05))
lines(density(ToothGrowth$len), col="red", lwd=2)
pr<- par(no.readonly=TRUE)
par(mfrow=c(2,2))
boxplot(ToothGrowth$len, main="Длина зубов")
boxplot(len~supp, data=ToothGrowth, varwidth=TRUE, notch=TRUE, col=c("green","red"), main=" Длина зубов")
hist(ToothGrowth$len, col="lightblue", main=" Длина зубов")
hist(ToothGrowth$len, col="lightblue", freq=FALSE, main=" Длина зубов")
lines(density(ToothGrowth$len),col="red",lwd=2)
par(pr)
mm<-matrix(c(1,1,2,3),ncol=2,nrow=2,byrow=T)
layout(mm)
hist(ToothGrowth$len, col="lightblue", main="Длина зубов")
boxplot(len~supp, data=ToothGrowth, varwidth=TRUE, notch=TRUE, col=c("green", "red"), main="Длина зубов")
hist(ToothGrowth$len, col="lightblue", freq=FALSE, main="Длина зубов")
lines(density(ToothGrowth$len), col="red", lwd=2)
par(mfrow=c(1,1))
library(compareGroups)
install.packages('compareGroups')
library(compareGroups)
group<-factor(rep(c('Препарат', 'Контроль'), 50))
response<-factor(sample('Улучшение','Нет изменений','Ухудшение'))
response<-factor(sample('Улучшение','Нет изменений','Ухудшение'), 100)
response<-factor(sample('Улучшение','Нет изменений','Ухудшение'), 100, replace = T))
response<-factor(sample(c('Улучшение','Нет изменений','Ухудшение'), 100, replace = T))
# sample создает случайный разброс
age<-round(rnorm(100, mean = c(40, 45), sd=c(10,15)))
table<- data.frame(Group = group, Response = response, Age = age)
View(table)
descrTable(~Response+Age+Group, data=table,
method = NA, Q1=0, Q3 = 1)
table1<- data.frame(Group = group, Response = response, Age = age)
descrTable(~Response+Age+Group, data=table1,
method = NA, Q1=0, Q3 = 1)
descrTable(Group~Response+Age, data=table1,
method = NA, Q1=0, Q3 = 1)
setwd("C:/BaranovaAS/данные")
tt<-read.delim("Hepatotoxicity.txt",as.is=T)
View(tt)
tt<-read.delim("Hepatotoxicity.txt",as.is=F)
tt<-read.delim("Hepatotoxicity.txt",as.is=T)
# as.is = F перевол всего, что возможно в факторы
counts<-table(tt$Class)
counts
barplot(counts, col=c('red', 'blue', 'green'), cex.names = 2, cex.main =2,
main = 'Распределение классов')
counts<-table(tt$Class,tt$Dose.category)
counts
counts<-counts[c(2,1,3),c(1,3,2)]
counts
barplot(counts, col=c("red","blue","green"),
cex.names=2, cex.main=2, legend=rownames(counts),
main="Зависимость степени гепатотоксичности от дозы", beside=TRUE)
counts<-table(tt$Class)
pie(counts, labels=names(counts), col=c("red","blue","green"), cex=2)
data<-read.delim('Arthritis.txt')
View(data)
count_imp <- table(data$Improved)
count_imp
barplot(count_imp, col = c('orange','red','pink'),
main = 'Терапевтический эффект',
x.lab = 'Эффект', y.lab = 'Количество пациентов')
barplot(count_imp, col = c('orange','red','pink'),
main = 'Терапевтический эффект',
xlab = 'Эффект', ylab = 'Количество пациентов')
percent<-c(count_imp[,1]/sum(count_imp), count_imp[,2]/sum(count_imp), count_imp[,3]/sum(count_imp))
count_imp[,1]
count_imp[1,]
count_imp
sum(count_imp)
count_imp[,1]
count_imp$Marked/sum(count_imp)
count_imp$Marked/sum(count_imp)
count_imp[,1]
count_imp[1,]
count_imp[1]
percent<-c(count_imp[1]/sum(count_imp), count_imp[2]/sum(count_imp), count_imp[3]/sum(count_imp))
percent<-c(100*count_imp[1]/sum(count_imp), 100*count_imp[2]/sum(count_imp), 100*count_imp[3]/sum(count_imp))
pie<-(percent)
pie(percent)
pie(percent, names(paste(data$Improved,percent,%, sep = ' ' )))
names<-paste(data$Improved,percent,%, sep = ' ' )
names<-paste(data$Improved, percent, %, sep = ' ' )
names<-paste(data$Improved, percent, '%', sep = ' ')
nt, '%', sep = ' ')
pie(percent, labels=names)
names<-paste(data$Improved, round(percent), '%', sep = ' ')
pie(percent, labels=names)
count_imp <- table(data$Improved)
percent<-c(100*count_imp[1]/sum(count_imp), 100*count_imp[2]/sum(count_imp), 100*count_imp[3]/sum(count_imp))
names<-paste(data$Improved, round(percent), '%', sep = ' ')
data$Improved
names<-paste(count_imp, round(percent), '%', sep = ' ')
pie(percent, labels=names)
names<-paste(count_imp$colnames, round(percent), '%', sep = ' ')
names<-paste(count_imp$names, round(percent), '%', sep = ' ')
names<-paste(c('Marked', 'None', 'Some'), round(percent), '%', sep = ' ')
pie(percent, labels=names)
counts <- table(data$Improved, data$Treatment)
counts
counts <- table(data$Improved, data$Treatment)
barplot(counts, col = c('orange','red','pink'),
main = 'Эффект лекарств для лечения артрита',
legend=rownames(counts), besides = T)
counts <- table(data$Improved, data$Treatment)
barplot(counts, col = c('orange','red','pink'),
main = 'Эффект лекарств для лечения артрита',
legend=rownames(counts), beside = T)
counts <- table(data$Improved, data$Treatment)
barplot(counts, col = c('orange','red','pink'),
main = 'Эффект лекарств для лечения артрита',
ylim = c(0, 30),
legend=rownames(counts), beside = T)
